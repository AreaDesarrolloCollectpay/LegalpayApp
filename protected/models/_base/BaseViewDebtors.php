<?php

/**
 * This is the model base class for the table "view_debtors".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewDebtors".
 *
 * Columns in table "view_debtors" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $idDebtor
 * @property integer $idState
 * @property integer $idDebtorSubstate
 * @property integer $is_legal
 * @property integer $idCity
 * @property integer $idCustomer
 * @property string $customer
 * @property integer $idTypeDocument
 * @property string $name
 * @property string $code
 * @property string $duedate
 * @property double $capital
 * @property integer $ageDebt
 * @property string $dayDebt
 * @property string $city
 * @property string $state
 *
 */
abstract class BaseViewDebtors extends GxActiveRecord {
    
    public $cant;
    public $date;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_debtors';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewDebtors|ViewDebtors', $n);
	}

	public static function representingColumn() {
		return 'state';
	}

	public function rules() {
		return array(
			array('id, idDebtor, is_legal, idCustomer, state', 'required'),
			array('id, idDebtor, idState, idDebtorSubstate, is_legal, idCity, idCustomer, idTypeDocument, ageDebt', 'numerical', 'integerOnly'=>true),
			array('capital', 'numerical'),
			array('dayDebt', 'length', 'max'=>21),
			array('customer, name, code, duedate, city', 'safe'),
			array('idState, idDebtorSubstate, idCity, customer, idTypeDocument, name, code, duedate, capital, ageDebt, dayDebt, city', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idDebtor, idState, idDebtorSubstate, is_legal, idCity, idCustomer, customer, idTypeDocument, name, code, duedate, capital, ageDebt, dayDebt, city, state', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idDebtor' => Yii::t('app', 'Id Debtor'),
			'idState' => Yii::t('app', 'Id State'),
			'idDebtorSubstate' => Yii::t('app', 'Id Debtor Substate'),
			'is_legal' => Yii::t('app', 'Is Legal'),
			'idCity' => Yii::t('app', 'Id City'),
			'idCustomer' => Yii::t('app', 'Id Customer'),
			'customer' => Yii::t('app', 'Customer'),
			'idTypeDocument' => Yii::t('app', 'Id Type Document'),
			'name' => Yii::t('app', 'Name'),
			'code' => Yii::t('app', 'Code'),
			'duedate' => Yii::t('app', 'Duedate'),
			'capital' => Yii::t('app', 'Capital'),
			'ageDebt' => Yii::t('app', 'Age Debt'),
			'dayDebt' => Yii::t('app', 'Day Debt'),
			'city' => Yii::t('app', 'City'),
			'state' => Yii::t('app', 'State'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idDebtor', $this->idDebtor);
		$criteria->compare('idState', $this->idState);
		$criteria->compare('idDebtorSubstate', $this->idDebtorSubstate);
		$criteria->compare('is_legal', $this->is_legal);
		$criteria->compare('idCity', $this->idCity);
		$criteria->compare('idCustomer', $this->idCustomer);
		$criteria->compare('customer', $this->customer, true);
		$criteria->compare('idTypeDocument', $this->idTypeDocument);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('duedate', $this->duedate, true);
		$criteria->compare('capital', $this->capital);
		$criteria->compare('ageDebt', $this->ageDebt);
		$criteria->compare('dayDebt', $this->dayDebt, true);
		$criteria->compare('city', $this->city, true);
		$criteria->compare('state', $this->state, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}