<?php

/**
 * This is the model base class for the table "tbl_relationship_type".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "RelationshipType".
 *
 * Columns in table "tbl_relationship_type" available as properties of the model,
 * followed by relations of table "tbl_relationship_type" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idTypeReference
 * @property string $name
 * @property integer $active
 * @property string $dateCreated
 *
 * @property DebtorsReference[] $debtorsReferences
 * @property TypeReference $idTypeReference0
 */
abstract class BaseRelationshipType extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_relationship_type';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'RelationshipType|RelationshipTypes', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, dateCreated', 'required'),
			array('idTypeReference, active', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>500),
			array('idTypeReference, active', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idTypeReference, name, active, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'debtorsReferences' => array(self::HAS_MANY, 'DebtorsReference', 'idRelationshipType'),
			'idTypeReference0' => array(self::BELONGS_TO, 'TypeReference', 'idTypeReference'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idTypeReference' => null,
			'name' => Yii::t('app', 'Name'),
			'active' => Yii::t('app', 'Active'),
			'dateCreated' => Yii::t('app', 'Date Created'),
			'debtorsReferences' => null,
			'idTypeReference0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idTypeReference', $this->idTypeReference);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('active', $this->active);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}