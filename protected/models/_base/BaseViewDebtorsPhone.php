<?php

/**
 * This is the model base class for the table "view_debtors_phone".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewDebtorsPhone".
 *
 * Columns in table "view_debtors_phone" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $idDebtor
 * @property string $idPhoneClass
 * @property integer $idCity
 * @property string $number
 * @property string $name
 * @property string $tdp
 *
 */
abstract class BaseViewDebtorsPhone extends GxActiveRecord {
    
    public $indicative;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_debtors_phone';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewDebtorsPhone|ViewDebtorsPhones', $n);
	}

	public static function representingColumn() {
		return 'tdp';
	}

	public function rules() {
		return array(
			array('idDebtor, idCity', 'numerical', 'integerOnly'=>true),
			array('idPhoneClass', 'length', 'max'=>255),
			array('tdp', 'length', 'max'=>3),
			array('number, name', 'safe'),
			array('idDebtor, idPhoneClass, idCity, number, name, tdp', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idDebtor, idPhoneClass, idCity, number, name, tdp', 'safe', 'on'=>'search'),
		);
	}
        
        public function getIndicative(){
            $this->indicative = '';
            if($this->idCity != NULL && $this->idPhoneClass == 2){                
                $city = Cities::model()->findByPk($this->idCity);
                if($city != null){                    
                    $this->indicative = $city->idDepartment0->indicative;
                }
            }
            return $this->indicative;
        }
        
        public function getIndicativeSms(){
            $this->indicative = '';
            if($this->idCity != NULL && $this->idPhoneClass == 1){                
                $city = Cities::model()->findByPk($this->idCity);
                if($city != null){                    
                    $this->indicative = $city->idDepartment0->idCountry0->indicative;
                }
            }
            return $this->indicative;
        }

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idDebtor' => Yii::t('app', 'Id Debtor'),
			'idPhoneClass' => Yii::t('app', 'Id Phone Class'),
			'idCity' => Yii::t('app', 'Id City'),
			'number' => Yii::t('app', 'Number'),
                        'name' => Yii::t('app', 'Name'),
			'tdp' => Yii::t('app', 'Tdp'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idDebtor', $this->idDebtor);
		$criteria->compare('idPhoneClass', $this->idPhoneClass, true);
		$criteria->compare('idCity', $this->idCity);
		$criteria->compare('number', $this->number, true);
                $criteria->compare('name', $this->name, true);
		$criteria->compare('tdp', $this->tdp, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}