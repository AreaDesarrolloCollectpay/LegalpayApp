<?php

/**
 * This is the model base class for the table "view_notification_invoice_customer".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewNotificationInvoiceCustomer".
 *
 * Columns in table "view_notification_invoice_customer" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $idCompany
 * @property string $company
 * @property string $number
 * @property string $date_expiration
 * @property double $total
 * @property integer $idUser
 * @property string $name
 * @property string $days
 *
 */
abstract class BaseViewNotificationInvoiceCustomer extends GxActiveRecord {
    
    public $email;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_notification_invoice_customer';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewNotificationInvoiceCustomer|ViewNotificationInvoiceCustomers', $n);
	}

	public static function representingColumn() {
		return 'number';
	}

	public function rules() {
		return array(
			array('number, date_expiration', 'required'),
			array('id, idCompany, idUser', 'numerical', 'integerOnly'=>true),
			array('total', 'numerical'),
			array('number', 'length', 'max'=>50),
			array('days', 'length', 'max'=>21),
			array('company, name, email', 'safe'),
			array('id, idCompany, company, total, idUser, name, days', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idCompany, company, number, date_expiration, total, idUser, name, days', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idCompany' => Yii::t('app', 'Id Company'),
			'company' => Yii::t('app', 'Company'),
			'number' => Yii::t('app', 'Number'),
			'date_expiration' => Yii::t('app', 'Date Expiration'),
			'total' => Yii::t('app', 'Total'),
			'idUser' => Yii::t('app', 'Id User'),
			'name' => Yii::t('app', 'Name'),
			'days' => Yii::t('app', 'Days'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idCompany', $this->idCompany);
		$criteria->compare('company', $this->company, true);
		$criteria->compare('number', $this->number, true);
		$criteria->compare('date_expiration', $this->date_expiration, true);
		$criteria->compare('total', $this->total);
		$criteria->compare('idUser', $this->idUser);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('days', $this->days, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}