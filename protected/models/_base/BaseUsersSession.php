<?php

/**
 * This is the model base class for the table "tbl_users_session".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UsersSession".
 *
 * Columns in table "tbl_users_session" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property integer $idUser
 * @property string $ipAddress
 * @property string $userAgent
 * @property string $dateCreated
 *
 */
abstract class BaseUsersSession extends GxActiveRecord {
    
    public $name;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_users_session';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UsersSession|UsersSessions', $n);
	}

	public static function representingColumn() {
		return 'ipAddress';
	}

	public function rules() {
		return array(
			array('idUser', 'required'),
			array('idUser', 'numerical', 'integerOnly'=>true),
			array('ipAddress', 'length', 'max'=>45),
			array('userAgent, dateCreated', 'safe'),
			array('ipAddress, userAgent, dateCreated', 'default', 'setOnEmpty' => true, 'value' => null),
			array('name', 'safe'),
			array('id, idUser, ipAddress, userAgent, dateCreated, name', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idUser' => Yii::t('app', 'Id User'),
			'ipAddress' => Yii::t('app', 'Ip Address'),
			'userAgent' => Yii::t('app', 'User Agent'),
			'dateCreated' => Yii::t('app', 'Date Created'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('idUser', $this->idUser);
		$criteria->compare('ipAddress', $this->ipAddress, true);
		$criteria->compare('userAgent', $this->userAgent, true);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}