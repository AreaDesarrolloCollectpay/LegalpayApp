<?php

/**
 * This is the model base class for the table "tbl_debtors_payments_payer".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "DebtorsPaymentsPayer".
 *
 * Columns in table "tbl_debtors_payments_payer" available as properties of the model,
 * followed by relations of table "tbl_debtors_payments_payer" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idDebtorPayment
 * @property string $type_person
 * @property string $document_type
 * @property string $numberDocument
 * @property string $name
 * @property string $email
 * @property string $phone
 * @property string $mobile
 * @property string $address
 * @property integer $idCity
 * @property string $numberCard
 * @property string $validThru
 * @property string $csc
 * @property string $pse_financial_code
 * @property string $ip_address
 * @property string $cookie
 * @property string $user_agent
 * @property string $dateCreated
 *
 * @property DebtorsPayments $idDebtorPayment0
 */
abstract class BaseDebtorsPaymentsPayer extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_debtors_payments_payer';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'DebtorsPaymentsPayer|DebtorsPaymentsPayers', $n);
	}

	public static function representingColumn() {
		return 'type_person';
	}

	public function rules() {
		return array(
			array('idDebtorPayment', 'required'),
			array('idDebtorPayment, idCity', 'numerical', 'integerOnly'=>true),
			array('type_person, document_type', 'length', 'max'=>5),
			array('numberDocument, name, email, phone, mobile, address', 'length', 'max'=>200),
			array('numberCard, validThru, csc, pse_financial_code, ip_address, cookie, user_agent', 'safe'),
			array('idDebtorPayment, type_person, document_type, numberDocument, name, email, phone, mobile, address, idCity, numberCard, validThru, csc, pse_financial_code, ip_address, cookie, user_agent', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idDebtorPayment, type_person, document_type, numberDocument, name, email, phone, mobile, address, idCity, numberCard, validThru, csc, pse_financial_code, ip_address, cookie, user_agent, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idDebtorPayment0' => array(self::BELONGS_TO, 'DebtorsPayments', 'idDebtorPayment'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idDebtorPayment' => null,
			'type_person' => Yii::t('app', 'Type Person'),
			'document_type' => Yii::t('app', 'Document Type'),
			'numberDocument' => Yii::t('app', 'Number Document'),
			'name' => Yii::t('app', 'Name'),
			'email' => Yii::t('app', 'Email'),
			'phone' => Yii::t('app', 'Phone'),
			'mobile' => Yii::t('app', 'Mobile'),
			'address' => Yii::t('app', 'Address'),
			'idCity' => Yii::t('app', 'Id City'),
			'numberCard' => Yii::t('app', 'Number Card'),
			'validThru' => Yii::t('app', 'Valid Thru'),
			'csc' => Yii::t('app', 'Csc'),
			'pse_financial_code' => Yii::t('app', 'Pse Financial Code'),
			'ip_address' => Yii::t('app', 'Ip Address'),
			'cookie' => Yii::t('app', 'Cookie'),
			'user_agent' => Yii::t('app', 'User Agent'),
			'dateCreated' => Yii::t('app', 'Date Created'),
			'idDebtorPayment0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idDebtorPayment', $this->idDebtorPayment);
		$criteria->compare('type_person', $this->type_person, true);
		$criteria->compare('document_type', $this->document_type, true);
		$criteria->compare('numberDocument', $this->numberDocument, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('mobile', $this->mobile, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('idCity', $this->idCity);
		$criteria->compare('numberCard', $this->numberCard, true);
		$criteria->compare('validThru', $this->validThru, true);
		$criteria->compare('csc', $this->csc, true);
		$criteria->compare('pse_financial_code', $this->pse_financial_code, true);
		$criteria->compare('ip_address', $this->ip_address, true);
		$criteria->compare('cookie', $this->cookie, true);
		$criteria->compare('user_agent', $this->user_agent, true);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}