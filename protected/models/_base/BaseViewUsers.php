<?php

/**
 * This is the model base class for the table "view_users".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewUsers".
 *
 * Columns in table "view_users" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $idPlan
 * @property string $idProfile
 * @property string $profile
 * @property string $name
 * @property string $userName
 * @property string $email
 * @property string $image
 * @property string $password
 * @property integer $active
 * @property string $idCompany
 * @property string $idCoordinator
 * @property integer $notification
 *
 */
abstract class BaseViewUsers extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_users';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewUsers|ViewUsers', $n);
	}

	public static function representingColumn() {
		return 'idPlan';
	}

	public function rules() {
		return array(
			array('profile, image', 'required'),
			array('id, active, notification', 'numerical', 'integerOnly'=>true),
			array('idPlan, idProfile, idCompany, idCoordinator', 'length', 'max'=>255),
			array('image', 'length', 'max'=>300),
			array('name, userName, email, password', 'safe'),
			array('id, idPlan, idProfile, name, userName, email, password, active, idCompany, idCoordinator, notification', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idPlan, idProfile, profile, name, userName, email, image, password, active, idCompany, idCoordinator, notification', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idPlan' => Yii::t('app', 'Id Plan'),
			'idProfile' => Yii::t('app', 'Id Profile'),
			'profile' => Yii::t('app', 'Profile'),
			'name' => Yii::t('app', 'Name'),
			'userName' => Yii::t('app', 'User Name'),
			'email' => Yii::t('app', 'Email'),
			'image' => Yii::t('app', 'Image'),
			'password' => Yii::t('app', 'Password'),
			'active' => Yii::t('app', 'Active'),
			'idCompany' => Yii::t('app', 'Id Company'),
			'idCoordinator' => Yii::t('app', 'Id Coordinator'),
			'notification' => Yii::t('app', 'Notification'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idPlan', $this->idPlan, true);
		$criteria->compare('idProfile', $this->idProfile, true);
		$criteria->compare('profile', $this->profile, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('userName', $this->userName, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('image', $this->image, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('active', $this->active);
		$criteria->compare('idCompany', $this->idCompany, true);
		$criteria->compare('idCoordinator', $this->idCoordinator, true);
		$criteria->compare('notification', $this->notification);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}