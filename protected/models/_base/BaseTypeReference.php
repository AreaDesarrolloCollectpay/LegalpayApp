<?php

/**
 * This is the model base class for the table "tbl_type_reference".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TypeReference".
 *
 * Columns in table "tbl_type_reference" available as properties of the model,
 * followed by relations of table "tbl_type_reference" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property integer $active
 * @property string $dateCreated
 *
 * @property DebtorsAddresses[] $debtorsAddresses
 * @property DebtorsEmails[] $debtorsEmails
 * @property DebtorsPhones[] $debtorsPhones
 * @property RelationshipType[] $relationshipTypes
 * @property UsersEmails[] $usersEmails
 * @property UsersPhones[] $usersPhones
 */
abstract class BaseTypeReference extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_type_reference';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TypeReference|TypeReferences', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name', 'required'),
			array('active', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>500),
			array('active', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, active, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'debtorsAddresses' => array(self::HAS_MANY, 'DebtorsAddresses', 'idTypeReference'),
			'debtorsEmails' => array(self::HAS_MANY, 'DebtorsEmails', 'idTypeReference'),
			'debtorsPhones' => array(self::HAS_MANY, 'DebtorsPhones', 'idTypeReference'),
			'relationshipTypes' => array(self::HAS_MANY, 'RelationshipType', 'idTypeReference'),
                        'usersEmails' => array(self::HAS_MANY, 'UsersEmails', 'idTypeReference'),
			'usersPhones' => array(self::HAS_MANY, 'UsersPhones', 'idTypeReference'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('front', 'Nombre'),
			'active' => Yii::t('front', 'Activo'),
			'dateCreated' => Yii::t('front', 'Fecha de CreaciÃ³n'),
			'debtorsAddresses' => null,
			'debtorsEmails' => null,
			'debtorsPhones' => null,
			'relationshipTypes' => null,
                        'usersEmails' => null,
			'usersPhones' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('active', $this->active);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}