<?php

/**
 * This is the model base class for the table "tbl_debtors_debts".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "DebtorsDebts".
 *
 * Columns in table "tbl_debtors_debts" available as properties of the model,
 * followed by relations of table "tbl_debtors_debts" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idDebtor
 * @property integer $idDebtorsState
 * @property integer $idDebtorSubstate
 * @property integer $is_legal
 * @property integer $idOfficeLegal
 * @property integer $idCategoryLegal
 * @property integer $idTypeProcess
 * @property string $office_legal
 * @property string $office_legal_location
 * @property string $office_number
 * @property string $internal_number
 * @property string $attorney
 * @property string $attorneyId
 * @property string $atorneyPC
 * @property string $date_filing
 * @property string $settledNumber
 * @property string $dateCreated
 *
 * @property DebtorsAgreements[] $debtorsAgreements
 * @property Debtors $idDebtor0
 * @property DebtorsState $idDebtorsState0
 * @property DebtorsState $idDebtorSubstate0
 * @property OfficeLegal $idOfficeLegal0
 * @property OfficeLegal $idCategoryLegal0
 * @property TypeProcess $idTypeProcess0
 * @property DebtorsDebtsObligations[] $debtorsDebtsObligations
 * @property DebtorsDebtsReports[] $debtorsDebtsReports
 * @property DebtorsPayments[] $debtorsPayments
 * @property DebtorsSpendings[] $debtorsSpendings
 * @property DebtorsSupports[] $debtorsSupports
 * @property DebtorsTasks[] $debtorsTasks
 */
abstract class BaseDebtorsDebts extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_debtors_debts';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'DebtorsDebts|DebtorsDebts', $n);
	}

	public static function representingColumn() {
		return 'dateCreated';
	}

	public function rules() {
		return array(
			array('idDebtor, dateCreated', 'required'),
			array('idDebtor, idDebtorsState, idDebtorSubstate, is_legal, idOfficeLegal, idCategoryLegal, idTypeProcess', 'numerical', 'integerOnly'=>true),
			array('idDebtor, idDebtorsState, idDebtorSubstate, is_legal, idOfficeLegal, idCategoryLegal, idTypeProcess, office_legal, office_legal_location, office_number, internal_number, attorney, attorneyId, atorneyPC, date_filing, settledNumber', 'safe'),
			array('idDebtorsState, idDebtorSubstate, is_legal, idOfficeLegal, idCategoryLegal, idTypeProcess, office_legal, office_legal_location, office_number, internal_number, attorney, attorneyId, atorneyPC, date_filing, settledNumber', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idDebtor, idDebtorsState, idDebtorSubstate, is_legal, idOfficeLegal, idCategoryLegal, idTypeProcess, office_legal, office_legal_location, office_number, internal_number, attorney, attorneyId, atorneyPC, date_filing, settledNumber, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'debtorsAgreements' => array(self::HAS_MANY, 'DebtorsAgreements', 'idDebtorDebt'),
			'idDebtor0' => array(self::BELONGS_TO, 'Debtors', 'idDebtor'),
			'idDebtorsState0' => array(self::BELONGS_TO, 'DebtorsState', 'idDebtorsState'),
			'idDebtorSubstate0' => array(self::BELONGS_TO, 'DebtorsState', 'idDebtorSubstate'),
			'idOfficeLegal0' => array(self::BELONGS_TO, 'OfficeLegal', 'idOfficeLegal'),
			'idCategoryLegal0' => array(self::BELONGS_TO, 'OfficeLegal', 'idCategoryLegal'),
                        'idTypeProcess0' => array(self::BELONGS_TO, 'TypeProcess', 'idTypeProcess'),
			'debtorsDebtsObligations' => array(self::HAS_MANY, 'DebtorsDebtsObligations', 'idDebtorDebt'),
                        'debtorsDebtsReports' => array(self::HAS_MANY, 'DebtorsDebtsReports', 'idDebtorDebt'),
			'debtorsPayments' => array(self::HAS_MANY, 'DebtorsPayments', 'idDebtorDebt'),
			'debtorsSpendings' => array(self::HAS_MANY, 'DebtorsSpendings', 'idDebtorDebt'),
			'debtorsSupports' => array(self::HAS_MANY, 'DebtorsSupports', 'idDebtorDebt'),
			'debtorsTasks' => array(self::HAS_MANY, 'DebtorsTasks', 'idDebtorDebt'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idDebtor' => null,
			'idDebtorsState' => null,
			'idDebtorSubstate' => null,
			'is_legal' => Yii::t('app', 'Is Legal'),
			'idOfficeLegal' => null,
			'idCategoryLegal' => null,
                        'idTypeProcess' => null,
			'office_legal' => Yii::t('app', 'Office Legal'),
			'office_legal_location' => Yii::t('app', 'Office Legal Location'),
			'office_number' => Yii::t('app', 'Office Number'),
			'internal_number' => Yii::t('app', 'Internal Number'),
			'attorney' => Yii::t('app', 'Attorney'),
			'attorneyId' => Yii::t('app', 'Attorney'),
			'atorneyPC' => Yii::t('app', 'Atorney Pc'),
			'date_filing' => Yii::t('app', 'Date Filing'),
			'settledNumber' => Yii::t('app', 'Settled Number'),
			'dateCreated' => Yii::t('app', 'Date Created'),
			'debtorsAgreements' => null,
			'idDebtor0' => null,
			'idDebtorsState0' => null,
			'idDebtorSubstate0' => null,
			'idOfficeLegal0' => null,
			'idCategoryLegal0' => null,
                        'idTypeProcess0' => null,
			'debtorsDebtsObligations' => null,
                        'debtorsDebtsReports' => null,
			'debtorsPayments' => null,
			'debtorsSpendings' => null,
			'debtorsSupports' => null,
			'debtorsTasks' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idDebtor', $this->idDebtor);
		$criteria->compare('idDebtorsState', $this->idDebtorsState);
		$criteria->compare('idDebtorSubstate', $this->idDebtorSubstate);
		$criteria->compare('is_legal', $this->is_legal);
		$criteria->compare('idOfficeLegal', $this->idOfficeLegal);
		$criteria->compare('idCategoryLegal', $this->idCategoryLegal);
                $criteria->compare('idTypeProcess', $this->idTypeProcess);
		$criteria->compare('office_legal', $this->office_legal, true);
		$criteria->compare('office_legal_location', $this->office_legal_location, true);
		$criteria->compare('office_number', $this->office_number, true);
		$criteria->compare('internal_number', $this->internal_number, true);
		$criteria->compare('attorney', $this->attorney, true);
		$criteria->compare('attorneyId', $this->attorneyId, true);
		$criteria->compare('atorneyPC', $this->atorneyPC, true);
		$criteria->compare('date_filing', $this->date_filing, true);
		$criteria->compare('settledNumber', $this->settledNumber, true);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}