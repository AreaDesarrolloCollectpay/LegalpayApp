<?php

/**
 * This is the model base class for the table "view_dependents".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewDependents".
 *
 * Columns in table "view_dependents" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $idProfile
 * @property integer $idCompany
 * @property string $profile
 * @property string $company
 * @property string $name
 * @property string $numberDocument
 * @property string $userName
 * @property string $email
 * @property string $image
 * @property string $idCountry
 * @property string $idDepartment
 * @property string $idCity
 * @property string $location
 * @property string $phone
 * @property string $mobile
 * @property string $address
 * @property string $idCoordinator
 * @property string $nameCoordinator
 * @property integer $active
 * @property integer $is_internal
 *
 */
abstract class BaseViewDependents extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_dependents';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewDependents|ViewDependents', $n);
	}

	public static function representingColumn() {
		return 'idProfile';
	}

	public function rules() {
		return array(
			array('profile, image, location, nameCoordinator', 'required'),
			array('id, idCompany, active, is_internal', 'numerical', 'integerOnly'=>true),
			array('idProfile, idCountry, idDepartment, idCoordinator', 'length', 'max'=>255),
			array('image', 'length', 'max'=>300),
			array('idCity', 'length', 'max'=>11),
			array('company, name, numberDocument, userName, email, phone, mobile, address', 'safe'),
			array('id, idProfile, idCompany, company, name, numberDocument, userName, email, idCountry, idDepartment, idCity, phone, mobile, address, idCoordinator, active, is_internal', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idProfile, idCompany, profile, company, name, numberDocument, userName, email, image, idCountry, idDepartment, idCity, location, phone, mobile, address, idCoordinator, nameCoordinator, active, is_internal', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idProfile' => Yii::t('app', 'Id Profile'),
			'idCompany' => Yii::t('app', 'Id Company'),
			'profile' => Yii::t('app', 'Profile'),
			'company' => Yii::t('app', 'Company'),
			'name' => Yii::t('app', 'Name'),
			'numberDocument' => Yii::t('app', 'Number Document'),
			'userName' => Yii::t('app', 'User Name'),
			'email' => Yii::t('app', 'Email'),
			'image' => Yii::t('app', 'Image'),
			'idCountry' => Yii::t('app', 'Id Country'),
			'idDepartment' => Yii::t('app', 'Id Department'),
			'idCity' => Yii::t('app', 'Id City'),
			'location' => Yii::t('app', 'Location'),
			'phone' => Yii::t('app', 'Phone'),
			'mobile' => Yii::t('app', 'Mobile'),
			'address' => Yii::t('app', 'Address'),
			'idCoordinator' => Yii::t('app', 'Id Coordinator'),
			'nameCoordinator' => Yii::t('app', 'Name Coordinator'),
			'active' => Yii::t('app', 'Active'),
			'is_internal' => Yii::t('app', 'Is Internal'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idProfile', $this->idProfile, true);
		$criteria->compare('idCompany', $this->idCompany);
		$criteria->compare('profile', $this->profile, true);
		$criteria->compare('company', $this->company, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('numberDocument', $this->numberDocument, true);
		$criteria->compare('userName', $this->userName, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('image', $this->image, true);
		$criteria->compare('idCountry', $this->idCountry, true);
		$criteria->compare('idDepartment', $this->idDepartment, true);
		$criteria->compare('idCity', $this->idCity, true);
		$criteria->compare('location', $this->location, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('mobile', $this->mobile, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('idCoordinator', $this->idCoordinator, true);
		$criteria->compare('nameCoordinator', $this->nameCoordinator, true);
		$criteria->compare('active', $this->active);
		$criteria->compare('is_internal', $this->is_internal);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}