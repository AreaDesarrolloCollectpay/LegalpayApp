<?php

/**
 * This is the model base class for the table "view_spendings".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewSpendings".
 *
 * Columns in table "view_spendings" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $idDebtorDebt
 * @property integer $idDebtor
 * @property string $idCoordinator
 * @property string $dateSpending
 * @property integer $idCustomer
 * @property string $customer
 * @property string $coordinator
 * @property string $location
 * @property string $code
 * @property string $name
 * @property double $value
 * @property string $support
 *
 */
abstract class BaseViewSpendings extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_spendings';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewSpendings|ViewSpendings', $n);
	}

	public static function representingColumn() {
		return 'dateSpending';
	}

	public function rules() {
		return array(
			array('id, idDebtorDebt, idDebtor, dateSpending, idCustomer, value', 'required'),
			array('id, idDebtorDebt, idDebtor, idCustomer', 'numerical', 'integerOnly'=>true),
			array('value', 'numerical'),
			array('idCoordinator', 'length', 'max'=>255),
			array('customer, coordinator, location, code, name, support', 'safe'),
			array('idCoordinator, customer, coordinator, location, code, name, support', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idDebtorDebt, idDebtor, idCoordinator, dateSpending, idCustomer, customer, coordinator, location, code, name, value, support', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idDebtorDebt' => Yii::t('app', 'Id Debtor Debt'),
			'idDebtor' => Yii::t('app', 'Id Debtor'),
			'idCoordinator' => Yii::t('app', 'Id Coordinator'),
			'dateSpending' => Yii::t('app', 'Date Spending'),
			'idCustomer' => Yii::t('app', 'Id Customer'),
			'customer' => Yii::t('app', 'Customer'),
			'coordinator' => Yii::t('app', 'Coordinator'),
			'location' => Yii::t('app', 'Location'),
			'code' => Yii::t('app', 'Code'),
			'name' => Yii::t('app', 'Name'),
			'value' => Yii::t('app', 'Value'),
			'support' => Yii::t('app', 'Support'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idDebtorDebt', $this->idDebtorDebt);
		$criteria->compare('idDebtor', $this->idDebtor);
		$criteria->compare('idCoordinator', $this->idCoordinator, true);
		$criteria->compare('dateSpending', $this->dateSpending, true);
		$criteria->compare('idCustomer', $this->idCustomer);
		$criteria->compare('customer', $this->customer, true);
		$criteria->compare('coordinator', $this->coordinator, true);
		$criteria->compare('location', $this->location, true);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('value', $this->value);
		$criteria->compare('support', $this->support, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}