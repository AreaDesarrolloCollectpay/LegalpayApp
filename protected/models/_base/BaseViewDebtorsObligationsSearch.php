<?php

/**
 * This is the model base class for the table "view_debtors_obligations_search".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewDebtorsObligationsSearch".
 *
 * Columns in table "view_debtors_obligations_search" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $idCreditModality
 * @property string $creditModality
 * @property integer $ageDebt
 * @property integer $is_legal
 * @property integer $idDebtor
 * @property integer $idCustomer
 * @property string $customer
 * @property string $name
 * @property string $code
 * @property string $typeDocument
 * @property integer $idCity
 * @property string $city
 * @property double $capital
 * @property double $interest
 * @property double $totalDebt
 * @property double $fee
 * @property double $payments
 * @property double $balance
 * @property string $dayDebt
 * @property integer $idState
 * @property string $state
 *
 */
abstract class BaseViewDebtorsObligationsSearch extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_debtors_obligations_search';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewDebtorsObligationsSearch|ViewDebtorsObligationsSearches', $n);
	}

	public static function representingColumn() {
		return 'creditModality';
	}

	public function rules() {
		return array(
			array('capital', 'required'),
			array('id, idCreditModality, ageDebt, is_legal, idDebtor, idCustomer, idCity, idState', 'numerical', 'integerOnly'=>true),
			array('capital, interest, totalDebt, fee, payments, balance', 'numerical'),
			array('creditModality', 'length', 'max'=>500),
			array('typeDocument', 'length', 'max'=>50),
			array('dayDebt', 'length', 'max'=>21),
			array('customer, name, code, city, state', 'safe'),
			array('id, idCreditModality, creditModality, ageDebt, is_legal, idDebtor, idCustomer, customer, name, code, typeDocument, idCity, city, interest, totalDebt, fee, payments, balance, dayDebt, idState, state', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idCreditModality, creditModality, ageDebt, is_legal, idDebtor, idCustomer, customer, name, code, typeDocument, idCity, city, capital, interest, totalDebt, fee, payments, balance, dayDebt, idState, state', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idCreditModality' => Yii::t('app', 'Id Credit Modality'),
			'creditModality' => Yii::t('app', 'Credit Modality'),
			'ageDebt' => Yii::t('app', 'Age Debt'),
			'is_legal' => Yii::t('app', 'Is Legal'),
			'idDebtor' => Yii::t('app', 'Id Debtor'),
			'idCustomer' => Yii::t('app', 'Id Customer'),
			'customer' => Yii::t('app', 'Customer'),
			'name' => Yii::t('app', 'Name'),
			'code' => Yii::t('app', 'Code'),
			'typeDocument' => Yii::t('app', 'Type Document'),
			'idCity' => Yii::t('app', 'Id City'),
			'city' => Yii::t('app', 'City'),
			'capital' => Yii::t('app', 'Capital'),
			'interest' => Yii::t('app', 'Interest'),
			'totalDebt' => Yii::t('app', 'Total Debt'),
			'fee' => Yii::t('app', 'Fee'),
			'payments' => Yii::t('app', 'Payments'),
			'balance' => Yii::t('app', 'Balance'),
			'dayDebt' => Yii::t('app', 'Day Debt'),
			'idState' => Yii::t('app', 'Id State'),
			'state' => Yii::t('app', 'State'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idCreditModality', $this->idCreditModality);
		$criteria->compare('creditModality', $this->creditModality, true);
		$criteria->compare('ageDebt', $this->ageDebt);
		$criteria->compare('is_legal', $this->is_legal);
		$criteria->compare('idDebtor', $this->idDebtor);
		$criteria->compare('idCustomer', $this->idCustomer);
		$criteria->compare('customer', $this->customer, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('typeDocument', $this->typeDocument, true);
		$criteria->compare('idCity', $this->idCity);
		$criteria->compare('city', $this->city, true);
		$criteria->compare('capital', $this->capital);
		$criteria->compare('interest', $this->interest);
		$criteria->compare('totalDebt', $this->totalDebt);
		$criteria->compare('fee', $this->fee);
		$criteria->compare('payments', $this->payments);
		$criteria->compare('balance', $this->balance);
		$criteria->compare('dayDebt', $this->dayDebt, true);
		$criteria->compare('idState', $this->idState);
		$criteria->compare('state', $this->state, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}