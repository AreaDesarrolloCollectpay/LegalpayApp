<?php

/**
 * This is the model base class for the table "tbl_debtors_supports".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "DebtorsSupports".
 *
 * Columns in table "tbl_debtors_supports" available as properties of the model,
 * followed by relations of table "tbl_debtors_supports" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idDebtor
 * @property integer $idDebtorDebt
 * @property integer $idUserSupport
 * @property integer $idTypeSupport
 * @property string $comments
 * @property string $dateSupport
 * @property string $support
 * @property string $dateCreated
 *
 * @property DebtorsObligations $idDebtor0
 * @property DebtorsDebts $idDebtorDebt0
 * @property TypeSupports $idTypeSupport0
 * @property Users $idUserSupport0
 */
abstract class BaseDebtorsSupports extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_debtors_supports';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'DebtorsSupports|DebtorsSupports', $n);
	}

	public static function representingColumn() {
		return 'comments';
	}

	public function rules() {
		return array(
			array('idDebtorDebt, idUserSupport, idTypeSupport, comments, dateSupport, support', 'required'),
			array('idDebtor, idUserSupport, idTypeSupport', 'numerical', 'integerOnly'=>true),
                        array('support', 'match', 'pattern'=>'/\.(gif|jpg|xlsx|jpeg|png|pdf|tiff|tif)$/i','message'=>Yii::t('err','El {attribute} es invÃ¡lido, Solo los archivos con estas extensiones son permitidos: gif, jpg, jpeg, png, tiff, pdf'), 'allowEmpty'=>true),                        			
			array('comments, support', 'length', 'max'=>500),
			array('idDebtorDebt, idUserSupport, idTypeSupport', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idDebtor, idDebtorDebt, idUserSupport, idTypeSupport, comments, dateSupport, support, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idDebtor0' => array(self::BELONGS_TO, 'DebtorsObligations', 'idDebtor'),
                        'idDebtorDebt0' => array(self::BELONGS_TO, 'DebtorsDebts', 'idDebtorDebt'),
                        'idTypeSupport0' => array(self::BELONGS_TO, 'TypeSupports', 'idTypeSupport'),
			'idUserSupport0' => array(self::BELONGS_TO, 'Users', 'idUserSupport'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idDebtor' => Yii::t('front', 'Deudor'),
                        'idDebtorDebt' => null,
			'idUserSupport' => Yii::t('front', 'Usuario'),
                        'idTypeSupport' => Yii::t('front', 'Tipo'),
			'comments' => Yii::t('front', 'Comentarios'),
			'dateSupport' => Yii::t('front', 'Fecha'),
			'support' => Yii::t('front', 'Soporte'),
			'dateCreated' => Yii::t('front', 'Fecha de CreaciÃ³n'),
			'idDebtor0' => null,
                        'idTypeSupport0' => null,
			'idUserSupport0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idDebtor', $this->idDebtor);
                $criteria->compare('idDebtorDebt', $this->idDebtorDebt);
		$criteria->compare('idUserSupport', $this->idUserSupport);
                $criteria->compare('idTypeSupport', $this->idTypeSupport);
		$criteria->compare('comments', $this->comments, true);
		$criteria->compare('dateSupport', $this->dateSupport, true);
		$criteria->compare('support', $this->support, true);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}