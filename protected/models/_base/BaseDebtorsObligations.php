<?php

/**
 * This is the model base class for the table "tbl_debtors_obligations".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "DebtorsObligations".
 *
 * Columns in table "tbl_debtors_obligations" available as properties of the model,
 * followed by relations of table "tbl_debtors_obligations" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idDebtor
 * @property integer $idDebtorsState
 * @property integer $idCreditModality
 * @property integer $idTypeProduct
 * @property integer $idOfficeLegal
 * @property integer $idCategoryLegal
 * @property integer $OfficeNumber
 * @property string $addressOfficeLegal
 * @property string $settledNumber
 * @property string $attorney
 * @property integer $is_legal
 * @property string $uniqueCode
 * @property string $duedate
 * @property string $expeditionDate
 * @property string $description
 * @property double $capital
 * @property string $dateRecovered
 * @property string $debtSupport
 * @property integer $active
 * @property string $dateCreated
 *
 * @property DebtorsAgreements[] $debtorsAgreements
 * @property DebtorsComments[] $debtorsComments
 * @property DebtorsDebtsObligations[] $debtorsDebtsObligations
 * @property CreditModality $idCreditModality0
 * @property DebtorsState $idDebtorsState0
 * @property OfficeLegal $idOfficeLegal0
 * @property OfficeLegal $idCategoryLegal0
 * @property TypeProducts $idTypeProduct0
 * @property Debtors $idDebtor0
 * @property DebtorsObligationsClusters[] $debtorsObligationsClusters
 * @property DebtorsObligationsInfo[] $debtorsObligationsInfos
 * @property DebtorsObligationsLegal[] $debtorsObligationsLegals
 * @property DebtorsObligationsPredictionsAgreement[] $debtorsObligationsPredictionsAgreements
 * @property DebtorsPayments[] $debtorsPayments
 * @property DebtorsSpendings[] $debtorsSpendings
 * @property DebtorsSupports[] $debtorsSupports
 * @property DebtorsTasks[] $debtorsTasks
 */
abstract class BaseDebtorsObligations extends GxActiveRecord {
    
    public $cant;    
    public $payments;    
    public $agreement;    
    public $fee;    
    public $c_interest;    
    public $prescription;
    public $dayDebt;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_debtors_obligations';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'DebtorsObligations|DebtorsObligations', $n);
	}

	public static function representingColumn() {
		return 'duedate';
	}
        
        public function afterFind(){  
            if($this->id != ''){
                $model = Yii::app()->db->createCommand("SELECT (duedate + interval 3 year) AS `prescription`, timestampdiff(DAY,`duedate`,ifnull(`dateRecovered`,curdate())) AS `dayDebt` FROM tbl_debtors_obligations WHERE id =".$this->id)->setFetchMode(PDO::FETCH_OBJ)->queryRow(true);
                $this->prescription = ($model != null)? $model->prescription : '' ;
                $this->dayDebt = ($model != null)? $model->dayDebt : '-' ;                
            }
            parent::afterFind();
        }

	public function rules() {
		return array(
			array('idDebtor, idDebtorsState, duedate, capital', 'required'),
			array('idDebtor, idDebtorsState, idCreditModality, idTypeProduct, idOfficeLegal, idCategoryLegal, OfficeNumber, is_legal, active', 'numerical', 'integerOnly'=>true),
			array('capital', 'numerical'),
			array('uniqueCode', 'length', 'max'=>255),
			array('idOfficeLegal, idCategoryLegal, OfficeNumber, addressOfficeLegal, settledNumber, attorney, expeditionDate, description, dateRecovered, debtSupport, cant', 'safe'),
			array('idDebtor, idDebtorsState, idCreditModality, idTypeProduct, idOfficeLegal, idCategoryLegal, OfficeNumber, addressOfficeLegal, settledNumber, attorney, is_legal, uniqueCode, expeditionDate, description, dateRecovered, debtSupport, active', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idDebtor, idDebtorsState, idCreditModality, idTypeProduct, idOfficeLegal, idCategoryLegal, OfficeNumber, addressOfficeLegal, settledNumber, attorney, is_legal, uniqueCode, duedate, expeditionDate, description, capital, dateRecovered, debtSupport, active, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
                        'debtorsAgreements' => array(self::HAS_MANY, 'DebtorsAgreements', 'idDebtorObligation'),
			'debtorsComments' => array(self::HAS_MANY, 'DebtorsComments', 'idDebtor'),
                        'idCreditModality0' => array(self::BELONGS_TO, 'CreditModality', 'idCreditModality'),
                        'idDebtorsState0' => array(self::BELONGS_TO, 'DebtorsState', 'idDebtorsState'),
                        'idOfficeLegal0' => array(self::BELONGS_TO, 'OfficeLegal', 'idOfficeLegal'),
			'idCategoryLegal0' => array(self::BELONGS_TO, 'OfficeLegal', 'idCategoryLegal'),
                        'idTypeProduct0' => array(self::BELONGS_TO, 'TypeProducts', 'idTypeProduct'),
			'idDebtor0' => array(self::BELONGS_TO, 'Debtors', 'idDebtor'),
                        'debtorsObligationsClusters' => array(self::HAS_MANY, 'DebtorsObligationsClusters', 'idDebtorObligation'),
                        'debtorsObligationsInfos' => array(self::HAS_ONE, 'DebtorsObligationsInfo', 'idDebtorObligation'),
			'debtorsObligationsLegals' => array(self::HAS_ONE, 'DebtorsObligationsLegal', 'idDebtorObligation'),			
                        'debtorsObligationsPredictionsAgreements' => array(self::HAS_MANY, 'DebtorsObligationsPredictionsAgreement', 'idDebtorObligation'),
			'debtorsPayments' => array(self::HAS_MANY, 'DebtorsPayments', 'idDebtorObligation'),
                        'debtorsSpendings' => array(self::HAS_MANY, 'DebtorsSpendings', 'idDebtor'),
			'debtorsSupports' => array(self::HAS_MANY, 'DebtorsSupports', 'idDebtor'),
			'debtorsTasks' => array(self::HAS_MANY, 'DebtorsTasks', 'idDebtor'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idDebtor' => null,
                        'idDebtorsState' => null,
                        'idCreditModality' => null,
                        'idTypeProduct' => null,
                        'idOfficeLegal' => null,
			'idCategoryLegal' => null,
			'OfficeNumber' => Yii::t('app', 'Número de Despacho'),
			'addressOfficeLegal' => Yii::t('app', 'Address Office Legal'),
                        'settledNumber' => Yii::t('app', 'Número de Radicado'),
			'attorney' => Yii::t('app', 'Abogado'),
                        'is_legal' => Yii::t('app', 'Juridico'),
			'uniqueCode' => Yii::t('app', 'Codigo Unico'),
			'duedate' => Yii::t('app', 'Fecha Deuda'),
                        'expeditionDate' => Yii::t('app', 'Expedición Deuda'),
			'description' => Yii::t('app', 'Descripción'),
			'capital' => Yii::t('app', 'Capital'),
			'dateRecovered' => Yii::t('app', 'Fecha Recuperado'),
			'debtSupport' => Yii::t('app', 'Soporte'),
			'active' => Yii::t('app', 'Activo'),
			'dateCreated' => Yii::t('app', 'Fecha de Creación'),
                        'debtorsAgreements' => null,
                        'debtorsComments' => null,
                        'debtorsDebtsObligations' => null,
			'idCreditModality0' => null,
			'idDebtorsState0' => null,
			'idOfficeLegal0' => null,
			'idCategoryLegal0' => null,
                        'idTypeProduct0' => null,
                        'idDebtor0' => null,
                        'debtorsObligationsClusters' => null,
                        'debtorsObligationsInfos' => null,
			'debtorsObligationsLegals' => null,
                        'debtorsObligationsPredictionsAgreements' => null,
                        'debtorsPayments' => null,
			'debtorsSpendings' => null,
			'debtorsSupports' => null,
			'debtorsTasks' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idDebtor', $this->idDebtor);
                $criteria->compare('idDebtorsState', $this->idDebtorsState);
                $criteria->compare('idCreditModality', $this->idCreditModality);
                $criteria->compare('idTypeProduct', $this->idTypeProduct);
                $criteria->compare('idOfficeLegal', $this->idOfficeLegal);
		$criteria->compare('idCategoryLegal', $this->idCategoryLegal);
		$criteria->compare('OfficeNumber', $this->OfficeNumber);
		$criteria->compare('addressOfficeLegal', $this->addressOfficeLegal, true);
                $criteria->compare('settledNumber', $this->settledNumber, true);
                $criteria->compare('attorney', $this->attorney, true);
                $criteria->compare('is_legal', $this->is_legal);
		$criteria->compare('uniqueCode', $this->uniqueCode, true);
		$criteria->compare('duedate', $this->duedate, true);
                $criteria->compare('expeditionDate', $this->expeditionDate, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('capital', $this->capital);
		$criteria->compare('dateRecovered', $this->dateRecovered, true);
		$criteria->compare('debtSupport', $this->debtSupport, true);
		$criteria->compare('active', $this->active);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}