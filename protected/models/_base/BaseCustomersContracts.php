<?php

/**
 * This is the model base class for the table "tbl_customers_contracts".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CustomersContracts".
 *
 * Columns in table "tbl_customers_contracts" available as properties of the model,
 * followed by relations of table "tbl_customers_contracts" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idUser
 * @property integer $idUserContracts
 * @property string $from
 * @property string $to
 * @property string $support
 * @property string $comments
 * @property string $dateCreated
 *
 * @property Users $idUser0
 * @property Users $idUserContracts0
 */
abstract class BaseCustomersContracts extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_customers_contracts';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'CustomersContracts|CustomersContracts', $n);
	}

	public static function representingColumn() {
		return 'support';
	}

	public function rules() {
		return array(
			array('idUser, idUserContracts, from, to, support, comments', 'required'),
			array('idUser, idUserContracts', 'numerical', 'integerOnly'=>true),
			array('from, to', 'safe'),
                        array('from, to', 'type', 'type' => 'date', 'message' => '{attribute}: is not a date!', 'dateFormat' => 'yyyy-MM-dd'),
                        array('support', 'match', 'pattern'=>'/\.(gif|jpg|jpeg|png|pdf|tiff)$/i','message'=>Yii::t('err','El {attribute} es invÃ¡lido, Solo los archivos con estas extensiones son permitidos: gif, jpg, jpeg, png, tiff, pdf'), 'allowEmpty'=>true),			
			array('idUser, idUserContracts, from, to', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idUser, idUserContracts, from, to, support, comments, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idUser0' => array(self::BELONGS_TO, 'Users', 'idUser'),
			'idUserContracts0' => array(self::BELONGS_TO, 'Users', 'idUserContracts'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idUser' => Yii::t('front', 'Cliente'),
			'idUserContracts' => Yii::t('front', 'Creador'),
			'from' => Yii::t('front', 'Desde'),
			'to' => Yii::t('front', 'Hasta'),
			'support' => Yii::t('front', 'Contrato'),
			'comments' => Yii::t('front', 'Comentarios'),
			'dateCreated' => Yii::t('front', 'Fecha de CreaciÃ³n'),
			'idUser0' => null,
			'idUserContracts0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idUser', $this->idUser);
		$criteria->compare('idUserContracts', $this->idUserContracts);
		$criteria->compare('from', $this->from, true);
		$criteria->compare('to', $this->to, true);
		$criteria->compare('support', $this->support, true);
		$criteria->compare('comments', $this->comments, true);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}