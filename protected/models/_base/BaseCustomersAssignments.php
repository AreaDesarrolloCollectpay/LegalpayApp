<?php

/**
 * This is the model base class for the table "tbl_customers_assignments".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CustomersAssignments".
 *
 * Columns in table "tbl_customers_assignments" available as properties of the model,
 * followed by relations of table "tbl_customers_assignments" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idCustomer
 * @property integer $idCustomerAssignments
 * @property string $file
 * @property integer $state
 * @property integer $accounts
 * @property double $capital
 * @property string $dateCreated
 *
 * @property Users $idCustomer0
 * @property Users $idCustomerAssignments0
 */
abstract class BaseCustomersAssignments extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_customers_assignments';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'CustomersAssignments|CustomersAssignments', $n);
	}

	public static function representingColumn() {
		return 'file';
	}

	public function rules() {
		return array(
			array('idCustomer, file', 'required'),
                        array('file', 'match', 'pattern' => '/\.(csv)$/i', 'message' => Yii::t('err', 'El {attribute} es invÃ¡lido, Solo los archivos con estas extensiones son permitidos: csv'), 'allowEmpty' => true, 'on' => 'updatePerfil'),
			array('idCustomer, idCustomerAssignments, state, accounts', 'numerical', 'integerOnly'=>true),
                        array('capital', 'numerical'),
			array('idCustomerAssignments, state, accounts, capital', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idCustomer, idCustomerAssignments, file, state, accounts, capital, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idCustomer0' => array(self::BELONGS_TO, 'Users', 'idCustomer'),
			'idCustomerAssignments0' => array(self::BELONGS_TO, 'Users', 'idCustomerAssignments'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idCustomer' => Yii::t('app', 'Cliente'),
			'idCustomerAssignments' => Yii::t('app', 'Creador'),
			'file' => Yii::t('app', 'Archivo'),
			'state' => Yii::t('app', 'Estado'),
                        'accounts' => Yii::t('app', 'Cuentas'),
			'capital' => Yii::t('app', 'Capital'),
			'dateCreated' => Yii::t('app', 'Fecha de CreaciÃ³n'),
			'idCustomer0' => null,
			'idCustomerAssignments0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idCustomer', $this->idCustomer);
		$criteria->compare('idCustomerAssignments', $this->idCustomerAssignments);
		$criteria->compare('file', $this->file, true);
		$criteria->compare('state', $this->state);
                $criteria->compare('accounts', $this->accounts);
		$criteria->compare('capital', $this->capital);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}