<?php

/**
 * This is the model base class for the table "tbl_users_documents".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UsersDocuments".
 *
 * Columns in table "tbl_users_documents" available as properties of the model,
 * followed by relations of table "tbl_users_documents" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idUser
 * @property integer $idUserCreated
 * @property integer $idTypeUsersDocuments
 * @property string $file
 * @property string $comments
 * @property string $dateCreated
 *
 * @property TblTypeUsersDocuments $idTypeUsersDocuments0
 * @property TblUsers $idUser0
 */
abstract class BaseUsersDocuments extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_users_documents';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UsersDocuments|UsersDocuments', $n);
	}

	public static function representingColumn() {
		return 'file';
	}

	public function rules() {
		return array(
			array('idUser, idUserCreated, idTypeUsersDocuments, file, comments', 'required'),
			array('idUser, idUserCreated, idTypeUsersDocuments', 'numerical', 'integerOnly'=>true),
                        array('file', 'match', 'pattern'=>'/\.(gif|jpg|jpeg|png|pdf|tiff)$/i','message'=>Yii::t('err','El {attribute} es invÃ¡lido, Solo los archivos con estas extensiones son permitidos: gif, jpg, jpeg, png, tiff, pdf'), 'allowEmpty'=>true),			
			array('id, idUser, idUserCreated, idTypeUsersDocuments, file, comments, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idTypeUsersDocuments0' => array(self::BELONGS_TO, 'TypeUsersDocuments', 'idTypeUsersDocuments'),
			'idUser0' => array(self::BELONGS_TO, 'Users', 'idUser'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idUser' => null,
			'idUserCreated' => Yii::t('app', 'Id User Created'),
			'idTypeUsersDocuments' => Yii::t('app', 'Tipo de documento'),
			'file' => Yii::t('app', 'Documento'),
			'comments' => Yii::t('app', 'Comentarios'),
			'dateCreated' => Yii::t('app', 'Date Created'),
			'idTypeUsersDocuments0' => null,
			'idUser0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idUser', $this->idUser);
		$criteria->compare('idUserCreated', $this->idUserCreated);
		$criteria->compare('idTypeUsersDocuments', $this->idTypeUsersDocuments);
		$criteria->compare('file', $this->file, true);
		$criteria->compare('comments', $this->comments, true);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}