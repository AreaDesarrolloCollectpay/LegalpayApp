<?php

/**
 * This is the model base class for the table "tbl_users_contacts".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UsersContacts".
 *
 * Columns in table "tbl_users_contacts" available as properties of the model,
 * followed by relations of table "tbl_users_contacts" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idUser
 * @property integer $idCity
 * @property string $name
 * @property string $mobile
 * @property string $phone
 * @property string $email
 * @property string $position
 * @property integer $active
 * @property string $dateCreated
 *
 * @property TblCities $idCity0
 * @property TblUsers $idUser0
 */
abstract class BaseUsersContacts extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_users_contacts';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UsersContacts|UsersContacts', $n);
	}

	public static function representingColumn() {
		return 'dateCreated';
	}

	public function rules() {
		return array(
			array('idUser, name, phone, position, idCity', 'required'),
			array('id, idUser, idCity, active', 'numerical', 'integerOnly'=>true),
			array('name, mobile, phone, email, position', 'length', 'max'=>255),
                        array('email','email'),
                        array('phone','match', 'pattern' => '/^[1-9]\d{6}$/','message' => '{attribute} inválido'),
                        array('mobile','match', 'pattern' => '/^3[\d]{9}$/','message' => '{attribute} inválido'),
			array('name, mobile, phone, email, position, active', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idUser, idCity, name, mobile, phone, email, position, active, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
                        'idCity0' => array(self::BELONGS_TO, 'Cities', 'idCity'),
			'idUser0' => array(self::BELONGS_TO, 'Users', 'idUser'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idUser' => null,
                        'idCity' => Yii::t('app', 'Ciudad'),
			'name' => Yii::t('app', 'Nombre'),
			'mobile' => Yii::t('app', 'Celular'),
			'phone' => Yii::t('app', 'Teléfono'),
			'email' => Yii::t('app', 'Email'),
			'position' => Yii::t('app', 'Cargo'),
			'active' => Yii::t('app', 'Active'),
			'dateCreated' => Yii::t('app', 'Fecha de Creación'),
			'idUser0' => null,
                        'idCity0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idUser', $this->idUser);
                $criteria->compare('idCity', $this->idCity);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('mobile', $this->mobile, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('position', $this->position, true);
		$criteria->compare('active', $this->active);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}