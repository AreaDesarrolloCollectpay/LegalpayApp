<?php

/**
 * This is the model base class for the table "view_business_advisor".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewBusinessAdvisor".
 *
 * Columns in table "view_business_advisor" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $name
 * @property string $numberDocument
 * @property string $userName
 * @property string $email
 * @property string $phone
 * @property string $address
 * @property integer $active
 * @property integer $is_internal
 *
 */
abstract class BaseViewBusinessAdvisor extends GxActiveRecord {
    
    public $value;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_business_advisor';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewBusinessAdvisor|ViewBusinessAdvisors', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('id, active, is_internal', 'numerical', 'integerOnly'=>true),
			array('name, numberDocument, userName, email, phone, address', 'safe'),
			array('id, name, numberDocument, userName, email, phone, address, active, is_internal', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, numberDocument, userName, email, phone, address, active, is_internal', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'numberDocument' => Yii::t('app', 'Number Document'),
			'userName' => Yii::t('app', 'User Name'),
			'email' => Yii::t('app', 'Email'),
			'phone' => Yii::t('app', 'Phone'),
			'address' => Yii::t('app', 'Address'),
			'active' => Yii::t('app', 'Active'),
			'is_internal' => Yii::t('app', 'Is Internal'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('numberDocument', $this->numberDocument, true);
		$criteria->compare('userName', $this->userName, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('active', $this->active);
		$criteria->compare('is_internal', $this->is_internal);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}