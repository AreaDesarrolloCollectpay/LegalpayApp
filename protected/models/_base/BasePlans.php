<?php

/**
 * This is the model base class for the table "tbl_plans".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Plans".
 *
 * Columns in table "tbl_plans" available as properties of the model,
 * followed by relations of table "tbl_plans" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property integer $value
 * @property integer $accounts
 * @property integer $active
 * @property integer $call
 * @property integer $sms
 * @property integer $email
 * @property integer $ml
 * @property integer $order
 * @property string $dateCreated
 *
 * @property MenuUsersProfile[] $menuUsersProfiles
 * @property PlansCompanies[] $plansCompanies
 * @property UsersPlans[] $usersPlans
 */
abstract class BasePlans extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_plans';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Plans|Plans', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, description, value, dateCreated', 'required'),
			array('value, accounts, active, call, sms, email, ml, order', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>50),
			array('accounts, active, call, sms, email, ml, order', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, description, value, accounts, active, call, sms, email, ml, order, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'menuUsersProfiles' => array(self::HAS_MANY, 'MenuUsersProfile', 'idPlan'),
			'plansCompanies' => array(self::HAS_MANY, 'PlansCompanies', 'idPlan'),
			'usersPlans' => array(self::HAS_MANY, 'UsersPlans', 'idPlan'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'description' => Yii::t('app', 'Description'),
			'value' => Yii::t('app', 'Value'),
			'accounts' => Yii::t('app', 'Accounts'),
			'active' => Yii::t('app', 'Active'),
			'call' => Yii::t('app', 'Call'),
			'sms' => Yii::t('app', 'Sms'),
			'email' => Yii::t('app', 'Email'),
			'ml' => Yii::t('app', 'Ml'),
			'order' => Yii::t('app', 'Order'),
			'dateCreated' => Yii::t('app', 'Date Created'),
			'menuUsersProfiles' => null,
			'plansCompanies' => null,
			'usersPlans' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('value', $this->value);
		$criteria->compare('accounts', $this->accounts);
		$criteria->compare('active', $this->active);
		$criteria->compare('call', $this->call);
		$criteria->compare('sms', $this->sms);
		$criteria->compare('email', $this->email);
		$criteria->compare('ml', $this->ml);
		$criteria->compare('order', $this->order);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}