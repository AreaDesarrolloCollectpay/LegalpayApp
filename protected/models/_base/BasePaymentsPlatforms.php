<?php

/**
 * This is the model base class for the table "tbl_payments_platforms".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PaymentsPlatforms".
 *
 * Columns in table "tbl_payments_platforms" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $name
 * @property string $apiKey
 * @property string $apiLogin
 * @property string $merchantId
 * @property string $account_id
 * @property integer $is_test
 *
 */
abstract class BasePaymentsPlatforms extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_payments_platforms';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PaymentsPlatforms|PaymentsPlatforms', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, apiKey, apiLogin, merchantId, account_id', 'required'),
			array('is_test', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>50),
			array('apiKey, apiLogin, merchantId, account_id', 'length', 'max'=>200),
			array('is_test', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, apiKey, apiLogin, merchantId, account_id, is_test', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'apiKey' => Yii::t('app', 'Api Key'),
			'apiLogin' => Yii::t('app', 'Api Login'),
			'merchantId' => Yii::t('app', 'Merchant'),
			'account_id' => Yii::t('app', 'Account'),
			'is_test' => Yii::t('app', 'Is Test'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('apiKey', $this->apiKey, true);
		$criteria->compare('apiLogin', $this->apiLogin, true);
		$criteria->compare('merchantId', $this->merchantId, true);
		$criteria->compare('account_id', $this->account_id, true);
		$criteria->compare('is_test', $this->is_test);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}