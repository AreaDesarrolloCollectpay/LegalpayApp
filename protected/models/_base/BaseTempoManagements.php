<?php

/**
 * This is the model base class for the table "tbl_tempo_managements".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TempoManagements".
 *
 * Columns in table "tbl_tempo_managements" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $name
 * @property string $number
 * @property string $action
 * @property string $state
 * @property string $is_contact
 * @property string $comment
 * @property string $userAsigned
 * @property integer $userCreated
 * @property integer $migrate
 * @property string $lot
 * @property integer $idCustomer
 * @property string $dateCreated
 *
 */
abstract class BaseTempoManagements extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_tempo_managements';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TempoManagements|TempoManagements', $n);
	}

	public static function representingColumn() {
		return 'dateCreated';
	}

	public function rules() {
		return array(
			array('idCustomer, dateCreated', 'required'),
			array('userCreated, migrate, idCustomer', 'numerical', 'integerOnly'=>true),
			array('name, action, state, comment, userAsigned, lot', 'length', 'max'=>255),
			array('number', 'length', 'max'=>50),
			array('is_contact', 'length', 'max'=>20),
			array('name, number, action, state, is_contact, comment, userAsigned, userCreated, migrate, lot', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, number, action, state, is_contact, comment, userAsigned, userCreated, migrate, lot, idCustomer, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'number' => Yii::t('app', 'Number'),
			'action' => Yii::t('app', 'Action'),
			'state' => Yii::t('app', 'State'),
			'is_contact' => Yii::t('app', 'Is Contact'),
			'comment' => Yii::t('app', 'Comment'),
			'userAsigned' => Yii::t('app', 'User Asigned'),
			'userCreated' => Yii::t('app', 'User Created'),
			'migrate' => Yii::t('app', 'Migrate'),
			'lot' => Yii::t('app', 'Lot'),
			'idCustomer' => Yii::t('app', 'Id Customer'),
			'dateCreated' => Yii::t('app', 'Date Created'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('number', $this->number, true);
		$criteria->compare('action', $this->action, true);
		$criteria->compare('state', $this->state, true);
		$criteria->compare('is_contact', $this->is_contact, true);
		$criteria->compare('comment', $this->comment, true);
		$criteria->compare('userAsigned', $this->userAsigned, true);
		$criteria->compare('userCreated', $this->userCreated);
		$criteria->compare('migrate', $this->migrate);
		$criteria->compare('lot', $this->lot, true);
		$criteria->compare('idCustomer', $this->idCustomer);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}