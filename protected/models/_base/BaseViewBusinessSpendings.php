<?php

/**
 * This is the model base class for the table "view_business_spendings".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewBusinessSpendings".
 *
 * Columns in table "view_business_spendings" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $date
 * @property integer $idUser
 * @property string $nameUser
 * @property string $numberDocument
 * @property integer $idBusinessAdvisor
 * @property string $businessAdvisor
 * @property string $location
 * @property double $value
 * @property string $support
 *
 */
abstract class BaseViewBusinessSpendings extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_business_spendings';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewBusinessSpendings|ViewBusinessSpendings', $n);
	}

	public static function representingColumn() {
		return 'date';
	}

	public function rules() {
		return array(
			array('date, value', 'required'),
			array('id, idUser, idBusinessAdvisor', 'numerical', 'integerOnly'=>true),
			array('value', 'numerical'),
			array('nameUser, numberDocument, businessAdvisor, location, support', 'safe'),
			array('id, idUser, nameUser, numberDocument, idBusinessAdvisor, businessAdvisor, location, support', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, date, idUser, nameUser, numberDocument, idBusinessAdvisor, businessAdvisor, location, value, support', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'date' => Yii::t('app', 'Date'),
			'idUser' => Yii::t('app', 'Id User'),
			'nameUser' => Yii::t('app', 'Name User'),
			'numberDocument' => Yii::t('app', 'Number Document'),
			'idBusinessAdvisor' => Yii::t('app', 'Id Business Advisor'),
			'businessAdvisor' => Yii::t('app', 'Business Advisor'),
			'location' => Yii::t('app', 'Location'),
			'value' => Yii::t('app', 'Value'),
			'support' => Yii::t('app', 'Support'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('date', $this->date, true);
		$criteria->compare('idUser', $this->idUser);
		$criteria->compare('nameUser', $this->nameUser, true);
		$criteria->compare('numberDocument', $this->numberDocument, true);
		$criteria->compare('idBusinessAdvisor', $this->idBusinessAdvisor);
		$criteria->compare('businessAdvisor', $this->businessAdvisor, true);
		$criteria->compare('location', $this->location, true);
		$criteria->compare('value', $this->value);
		$criteria->compare('support', $this->support, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}