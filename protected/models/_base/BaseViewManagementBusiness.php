<?php

/**
 * This is the model base class for the table "view_management_business".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewManagementBusiness".
 *
 * Columns in table "view_management_business" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $idUsersBusiness
 * @property integer $idTasksAction
 * @property integer $state
 * @property integer $idUserAsigned
 * @property string $adviser
 * @property string $date
 * @property string $management
 * @property string $comments
 * @property string $action
 * @property string $images
 *
 */
abstract class BaseViewManagementBusiness extends GxActiveRecord {
    
    public $days;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_management_business';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewManagementBusiness|ViewManagementBusinesses', $n);
	}

	public static function representingColumn() {
		return 'comments';
	}

	public function rules() {
		return array(
			array('idUsersBusiness, comments', 'required'),
			array('id, idUsersBusiness, idTasksAction, state, idUserAsigned', 'numerical', 'integerOnly'=>true),
			array('management, action', 'length', 'max'=>500),
			array('images', 'length', 'max'=>21),
			array('adviser, date', 'safe'),
			array('id, idTasksAction, state, idUserAsigned, adviser, date, management, action, images', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idUsersBusiness, idTasksAction, state, idUserAsigned, adviser, date, management, comments, action, images', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idUsersBusiness' => Yii::t('app', 'Id Users Business'),
			'idTasksAction' => Yii::t('app', 'Id Tasks Action'),
			'state' => Yii::t('app', 'State'),
			'idUserAsigned' => Yii::t('app', 'Id User Asigned'),
			'adviser' => Yii::t('app', 'Adviser'),
			'date' => Yii::t('app', 'Date'),
			'management' => Yii::t('app', 'Management'),
			'comments' => Yii::t('app', 'Comments'),
			'action' => Yii::t('app', 'Action'),
			'images' => Yii::t('app', 'Images'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idUsersBusiness', $this->idUsersBusiness);
		$criteria->compare('idTasksAction', $this->idTasksAction);
		$criteria->compare('state', $this->state);
		$criteria->compare('idUserAsigned', $this->idUserAsigned);
		$criteria->compare('adviser', $this->adviser, true);
		$criteria->compare('date', $this->date, true);
		$criteria->compare('management', $this->management, true);
		$criteria->compare('comments', $this->comments, true);
		$criteria->compare('action', $this->action, true);
		$criteria->compare('images', $this->images, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}