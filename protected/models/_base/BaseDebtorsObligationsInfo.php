<?php

/**
 * This is the model base class for the table "tbl_debtors_obligations_info".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "DebtorsObligationsInfo".
 *
 * Columns in table "tbl_debtors_obligations_info" available as properties of the model,
 * followed by relations of table "tbl_debtors_obligations_info" available as properties of the model.
 *
 * @property integer $id
 * @property integer $idDebtorObligation
 * @property integer $legal
 * @property integer $promissory_note_o_p
 * @property integer $promissory_note_d
 * @property integer $au_central_risk_o_p
 * @property string $disbursement_date
 * @property double $approved_value
 * @property string $punishment_date
 * @property string $last_pay_date
 * @property double $capital_subscription
 * @property double $interest_subscription
 * @property double $secure_subscription
 * @property double $total_subscription
 * @property string $total_pay_from_expiration
 * @property string $last_pay_capital_date
 * @property string $last_pay_interest_date
 * @property string $presentation_demand_date
 * @property integer $linking_format
 * @property string $conditions
 * @property string $dateCreated
 *
 * @property DebtorsObligations $idDebtorObligation0
 */
abstract class BaseDebtorsObligationsInfo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_debtors_obligations_info';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'DebtorsObligationsInfo|DebtorsObligationsInfos', $n);
	}

	public static function representingColumn() {
		return 'disbursement_date';
	}

	public function rules() {
		return array(
			array('idDebtorObligation, disbursement_date, punishment_date, dateCreated', 'required'),
			array('idDebtorObligation, legal, promissory_note_o_p, promissory_note_d, au_central_risk_o_p, linking_format', 'numerical', 'integerOnly'=>true),
			array('approved_value, capital_subscription, interest_subscription, secure_subscription, total_subscription', 'numerical'),
			array('conditions', 'length', 'max'=>500),
			array('last_pay_date, total_pay_from_expiration, last_pay_capital_date, last_pay_interest_date, presentation_demand_date', 'safe'),
			array('legal, promissory_note_o_p, promissory_note_d, au_central_risk_o_p, approved_value, last_pay_date, capital_subscription, interest_subscription, secure_subscription, total_subscription, total_pay_from_expiration, last_pay_capital_date, last_pay_interest_date, presentation_demand_date, linking_format, conditions', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, idDebtorObligation, legal, promissory_note_o_p, promissory_note_d, au_central_risk_o_p, disbursement_date, approved_value, punishment_date, last_pay_date, capital_subscription, interest_subscription, secure_subscription, total_subscription, total_pay_from_expiration, last_pay_capital_date, last_pay_interest_date, presentation_demand_date, linking_format, conditions, dateCreated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idDebtorObligation0' => array(self::BELONGS_TO, 'DebtorsObligations', 'idDebtorObligation'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'idDebtorObligation' => null,
			'legal' => Yii::t('app', 'Legal'),
			'promissory_note_o_p' => Yii::t('app', 'Promissory Note O P'),
			'promissory_note_d' => Yii::t('app', 'Promissory Note D'),
			'au_central_risk_o_p' => Yii::t('app', 'Au Central Risk O P'),
			'disbursement_date' => Yii::t('app', 'Disbursement Date'),
			'approved_value' => Yii::t('app', 'Approved Value'),
			'punishment_date' => Yii::t('app', 'Punishment Date'),
			'last_pay_date' => Yii::t('app', 'Last Pay Date'),
			'capital_subscription' => Yii::t('app', 'Capital Subscription'),
			'interest_subscription' => Yii::t('app', 'Interest Subscription'),
			'secure_subscription' => Yii::t('app', 'Secure Subscription'),
			'total_subscription' => Yii::t('app', 'Total Subscription'),
			'total_pay_from_expiration' => Yii::t('app', 'Total Pay From Expiration'),
			'last_pay_capital_date' => Yii::t('app', 'Last Pay Capital Date'),
			'last_pay_interest_date' => Yii::t('app', 'Last Pay Interest Date'),
			'presentation_demand_date' => Yii::t('app', 'Presentation Demand Date'),
			'linking_format' => Yii::t('app', 'Linking Format'),
			'conditions' => Yii::t('app', 'Conditions'),
			'dateCreated' => Yii::t('app', 'Date Created'),
			'idDebtorObligation0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('idDebtorObligation', $this->idDebtorObligation);
		$criteria->compare('legal', $this->legal);
		$criteria->compare('promissory_note_o_p', $this->promissory_note_o_p);
		$criteria->compare('promissory_note_d', $this->promissory_note_d);
		$criteria->compare('au_central_risk_o_p', $this->au_central_risk_o_p);
		$criteria->compare('disbursement_date', $this->disbursement_date, true);
		$criteria->compare('approved_value', $this->approved_value);
		$criteria->compare('punishment_date', $this->punishment_date, true);
		$criteria->compare('last_pay_date', $this->last_pay_date, true);
		$criteria->compare('capital_subscription', $this->capital_subscription);
		$criteria->compare('interest_subscription', $this->interest_subscription);
		$criteria->compare('secure_subscription', $this->secure_subscription);
		$criteria->compare('total_subscription', $this->total_subscription);
		$criteria->compare('total_pay_from_expiration', $this->total_pay_from_expiration, true);
		$criteria->compare('last_pay_capital_date', $this->last_pay_capital_date, true);
		$criteria->compare('last_pay_interest_date', $this->last_pay_interest_date, true);
		$criteria->compare('presentation_demand_date', $this->presentation_demand_date, true);
		$criteria->compare('linking_format', $this->linking_format);
		$criteria->compare('conditions', $this->conditions, true);
		$criteria->compare('dateCreated', $this->dateCreated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
                        //'sort' => array('defaultOrder'=>'orden')
		));
	}
}