$(function () {
    // submit form mlmodels - generate sources and dataset    
    $('body').on('submit', '.form-mlmodels', function (e) {
        e.preventDefault();
        var form = new FormData(this);
        var fields = '';
        $('.dual-listbox__selected li').each(function(){
            var _this = $(this);                    
            if(_this.attr('data-id') != ''){                    
                fields += _this.attr('data-id')+',';
            }                
         });
         
        form.append("fields", fields);
         
        $.ajax({
            url: SITEURL + "/machine/saveMlModels",
            dataType: 'json',
            type: 'POST',
            data: form,
            processData: false,
            contentType: false,
            beforeSend: function () {
                progressBar('start');
            },
            success: function (result) {
                if (result.status == "success" || result.status == "waiting") {
                    statusPrediction(result.msg);
                    if (result.status == "success") {
                        createSource(result.model.id);
                    } else {
                        setTimeout(function () {
                            getSource(result.model.id);
                        }, 800);
                    }
                } else {
                    progressBar('finish');
                    toastr[result.status](result.msg);
                }
            }
        });
    });
});

function progressBar(action) {
    console.log('progress2');
    if (action == 'start') {
        $('#content-form-models').hide();
        $('#content-form-status').show();
    } else {
        $('#content-form-status').hide();
        $('#content-form-models').show();
    }
}

function statusPrediction(msg) {
    $('#text-status').html(msg);
}

function createSource(id) {
    console.log('create source');
    $.ajax({
        url: SITEURL + "/machine/createSource",
        dataType: 'json',
        type: 'POST',
        data: {
            id: id,
        },
        beforeSend: function () {
            progressBar('start');
        },
        success: function (result) {
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                if (result.status == "success") {
                    createDataset(result.model.id);
                } else {
                    setTimeout(function () {
                        getSource(result.model.id);
                    }, 800);
                }
            } else {
                progressBar('finish');
                toastr[result.status](result.msg);
            }
        }
    });
}

function getSource(id) {
    console.log('getSource');
    $.ajax({
        url: SITEURL + "/machine/getSource",
        dataType: 'json',
        type: 'POST',
        data: {
            id: id
        },
        success: function (result) {
//            $(".preload").fadeOut(300);            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                if (result.status == "success") {
                    createDataset(result.model.id);
                } else {
                    setTimeout(function () {
                        getSource(result.model.id);
                    }, 10000);
                }
            } else {
                progressBar('finish');
                toastr[result.status](result.msg);
            }
        }
    });
}

function createDataset(id) {
    console.log('createDataset');
    $.ajax({
        url: SITEURL + "/machine/createDataset",
        dataType: 'json',
        type: 'POST',
        data: {
            id: id
        },
        success: function (result) {
//            $(".preload").fadeOut(300);            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                if (result.status == "success") {
                    createCluster(result.model.id);
                } else {
                    setTimeout(function () {
                        getDataset(result.model.id);
                    }, 10000);
                }
            } else {
                progressBar('finish');
                toastr[result.status](result.msg);
            }
        }
    });
}

function getDataset(id) {
    console.log('getDataset');
    $.ajax({
        url: SITEURL + "/machine/getDataset",
        dataType: 'json',
        type: 'POST',
        data: {
            id: id,
        },
        success: function (result) {
//            $(".preload").fadeOut(300);            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                if (result.status == "success") {
                    createCluster(result.model.id);
                } else {
                    setTimeout(function () {
                        getDataset(result.model.id);
                    }, 10000);
                }
            } else {
                progressBar('finish');
                toastr[result.status](result.msg);
            }
        }
    });
}

function createCluster(id) {
    console.log('createCluster');
    $.ajax({
        url: SITEURL + "/machine/createCluster",
        dataType: 'json',
        type: 'POST',
        data: {
            id: id,
        },
        success: function (result) {
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);                
                setTimeout(function () {
                    getCluster(result.model.id);
                }, 10000);
            } else {
                progressBar('finish');
                toastr[result.status](result.msg);
            }
        }
    });

}

function getCluster(id) {
    console.log('getCluster');
    $.ajax({
        url: SITEURL + "/machine/getCluster",
        dataType: 'json',
        type: 'POST',
        data: {
            id: id,
        },
        success: function (result) {
//            $(".preload").fadeOut(300);            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                if (result.status == "success") {
                    updateCluster(result.model.id);
                } else {
                    setTimeout(function () {
                        getCluster(result.model.id);
                    }, 10000);
                }
            } else {
                progressBar('finish');
                toastr[result.status](result.msg);
            }
        }
    });
}

function updateCluster(id) {
    console.log('updateCluster');
    $.ajax({
        url: SITEURL + "/machine/updateCluster",
        dataType: 'json',
        type: 'POST',
        data: {
            id: id,
        },
        success: function (result) {
//            $(".preload").fadeOut(300);            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                if (result.status == "success") {
//                    console.log('finish');
//                    location.href = SITEURL+"/machine"; 
                    createBatchCentroid(result.model.id);
                } else {
                    setTimeout(function () {
                        updateCluster(result.model.id);
                    }, 10000);
                }
            } else {
                progressBar('finish');
                toastr[result.status](result.msg);
            }
        }
    });
}

function createBatchCentroid(id,type) {
    console.log('createBatchCentroid');
    $.ajax({
        url: SITEURL + "/machine/createBatchCentroid",
        dataType: 'json',
        type: 'POST',
        data: {
            id: id, type: type
        },
        success: function (result) {
//            $(".preload").fadeOut(300);            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                if (result.status == "success") {
                    downloadBatchCentroid(id,type);
                } else {
                    setTimeout(function () {
                       getBatchCentroid(id,type);
                    }, 10000);
                }
            } else {
                progressBar('finish');
                toastr[result.status](result.msg);
            }
        }
    });
}

function getBatchCentroid(id,type) {
    console.log('getBatchCentroid');
    $.ajax({
        url: SITEURL + "/machine/getBatchCentroid",
        dataType: 'json',
        type: 'POST',
        data: {
            id: id, type: type
        },
        success: function (result) {
//            $(".preload").fadeOut(300);            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                if (result.status == "success") {
                    downloadBatchCentroid(id,type);
                } else {
                    setTimeout(function () {
                       getBatchCentroid(id,type);
                    }, 10000);
                }
            } else {
                progressBar('finish');
                toastr[result.status](result.msg);
            }
        }
    });
}

function downloadBatchCentroid(id,type){
    console.log('downloadBatchCentroid');
    $.ajax({
        url: SITEURL + "/machine/downloadBatchCentroid",
        dataType: 'json',
        type: 'POST',
        data: {
            id: id, type: type
        },
        success: function (result) {
//            $(".preload").fadeOut(300);            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                if (result.status == "success") {
                    location.href = SITEURL+"/machine/analize/"+result.model.id;  
                }
                else {
                    setTimeout(function () {
                       downloadBatchCentroid(id,type);
                    }, 10000);
                }
            } else {
                progressBar('finish');
                toastr[result.status](result.msg);
            }
        }
    });
}


$(window).on('load', function () {
    setTimeout(function () {
        $('#m-wallets').trigger('click');
        $('#m-machine').addClass('active');
    }, 250);
});