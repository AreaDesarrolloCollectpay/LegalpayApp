$(function () {    
    
    $("#fileUpload").addClass("activo");
    $("#load_db").hide();

    //  change slect customer

    $('body').on('change', '#predictions-idCustomer', function (e) {
        e.preventDefault();
        var formElement = document.querySelector(".form-predictions");
        var form = new FormData(formElement);  
        $.ajax({
            url: SITEURL + "/predictions/validateResources",
            dataType: 'json',
            type: 'POST',
            data: form,
            processData: false,
            contentType: false,
            beforeSend: function () {
                $(".preload").fadeIn(300);
            },
            success: function (result) {
                $(".preload").fadeOut(300);
                if (result.status == "success"){
                    $('#predictions-total_debts').val(result.cant);
                    $('#predictions-file').val(result.file);
                    $('#predictions-total_capital_debts').val(numeral(result.model.capital).format('0,0'));
                    $('#content-info-sources').removeClass('hide');
                }else{
                    toastr[result.status](result.msg);
                    $('#content-info-sources').addClass('hide');                    
                }
            }
        });
    });

    // submit form prediction - generate sources and dataset
    
    $('body').on('submit', '.form-predictions', function (e) {
        e.preventDefault();
        var form = new FormData(this);
        $.ajax({
            url: SITEURL + "/predictions/createSource",
            dataType: 'json',
            type: 'POST',
            data: form,
            processData: false,
            contentType: false,
            beforeSend: function () {
                progressBar('start');                
            },
            success: function (result) {                
                if (result.status == "success" || result.status == "waiting") {
                      statusPrediction(result.msg);
                      if(result.status == "success"){
                        createDataset(result.source);
                      }else{
                        setTimeout(function () {
                            getSource(result.source);
                        }, 800);
                      }
                }else{
                    progressBar('finish');
                    toastr[result.status](result.msg);                    
                }
            }
        });
    });
    
    $('body').on('submit', '.form-import-data', function (e) {
        e.preventDefault();
        var form = new FormData(this);
        $.ajax({
            url: SITEURL + "/assignments/importData",
            dataType: 'json',
            type: 'POST',
            data: form,
            processData: false,
            contentType: false,
            beforeSend: function () {
                $(".preload").fadeIn(300);
            },
            success: function (result) {
                $(".preload").fadeOut(300);
                toastr[result.status](result.msg);
                if (result.status == "success") {
                      $('#load_db').closeModal();
                    setTimeout(function () {
                        location.reload();
                    }, 200);
                }
            }
        });
    });
    
    $('body').on('click', '.deleteImport', function (e) {
        e.preventDefault();
        var formElement = document.querySelector(".form-import-data");
        var form = new FormData(formElement);  
        $.ajax({
            url: SITEURL + "/assignments/deleteImport",
            dataType: 'json',
            type: 'POST',
            data: form,
            processData: false,
            contentType: false,
            beforeSend: function () {
                $(".preload").fadeIn(300);
            },
            success: function (result) {
                $(".preload").fadeOut(300);
                toastr[result.status](result.msg);
                if (result.status == "success") {
                      $('#load_db').closeModal();
                    setTimeout(function () {
                        location.reload();
                    }, 200);
                }
            }
        });
    });
    
   // Give the points a 3D feel by adding a radial gradient
    Highcharts.setOptions({
        global: {
            useUTC: false
        },
        lang: {
            thousandsSep: ','
        },
        colors: Highcharts.getOptions().colors.map(function (color) {
            return {
                radialGradient: {
                    cx: 0.4,
                    cy: 0.3,
                    r: 0.5
                },
                stops: [
                    [0, color],
                    [1, Highcharts.Color(color).brighten(-0.2).get('rgb')]
                ]
            };
        })
    });

});

$(window).on('load', function() {
//    getSource();
      
});

function progressBar(action){
    console.log('progress');
    if(action == 'start'){
        $('#form-predictions').hide();
        $('#form-predictions-status').show();        
    }else{
        $('#form-predictions-status').hide();
        $('#form-predictions').show();                
    }
}

function statusPrediction(msg){
    $('#text-status').html(msg);
}

function getSource(source){
    console.log('getSource');
    
    $.ajax({
        url: SITEURL + "/predictions/getSource",
        dataType: 'json',
        type: 'POST',
        data: {
            source : source
        },
        success: function (result) {
//            $(".preload").fadeOut(300);            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                    if(result.status == "success"){
                        createDataset(result.source); 
                    }else{
                        setTimeout(function () {
                            getSource(result.source);
                        }, 10000);
                    }
            }else{
                progressBar('finish');
                toastr[result.status](result.msg);                 
            }
        }
    });
}

function createDataset(source){
    console.log('createDataset');
    
    $.ajax({
        url: SITEURL + "/predictions/createDataset",
        dataType: 'json',
        type: 'POST',
        data: {
            source : source
        },
        success: function (result) {
//            $(".preload").fadeOut(300);            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                    if(result.status == "success"){
                        createPrediction(result.source,result.dataset); 
                    }else{
                        setTimeout(function () {
                            getDataset(result.source,result.dataset);
                        }, 10000);
                    }
            }else{
                progressBar('finish');
                toastr[result.status](result.msg);                
            }
        }
    });
}

function getDataset(source,dataset){
    console.log('getDataset');
    $.ajax({
        url: SITEURL + "/predictions/getDataset",
        dataType: 'json',
        type: 'POST',
        data: {
            source : source,
            dataset : dataset
        },
        success: function (result) {
//            $(".preload").fadeOut(300);            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                    if(result.status == "success"){
                        createPrediction(result.source,result.dataset); 
                    }else{
                        setTimeout(function () {
                            getDataset(result.source,result.dataset);
                        }, 10000);
                    }
            }else{
                progressBar('finish');
                toastr[result.status](result.msg);                
            }
        }
    });
}

function createPrediction(source,dataset){
    console.log('createPrediction');
    $.ajax({
        url: SITEURL + "/predictions/createPrediction",
        dataType: 'json',
        type: 'POST',
        data: {
            source : source,
            dataset : dataset
        },
        success: function (result) {            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                    if(result.status == "success"){
                        downloadPrediction(result.source,result.dataset,result.prediction); 
                    }else{
                        setTimeout(function () {
                            getPrediction(result.source,result.dataset,result.prediction);
                        }, 10000);
                    }
            }else{
                progressBar('finish');
                toastr[result.status](result.msg);                
            }            
        }
    });
    
}

function getPrediction(source,dataset,prediction){
    console.log('getPrediction');
    $.ajax({
        url: SITEURL + "/predictions/getPrediction",
        dataType: 'json',
        type: 'POST',
        data: {
            source : source,
            dataset : dataset,
            prediction : prediction
        },
        success: function (result) {
//            $(".preload").fadeOut(300);            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                    if(result.status == "success"){
                        downloadPrediction(result.source,result.dataset,result.prediction); 
                    }else{
                        setTimeout(function () {
                            getPrediction(result.source,result.dataset,result.prediction);
                        }, 10000);
                    }
            }else{
                progressBar('finish');
                toastr[result.status](result.msg);                
            }
        }
    });
}

function downloadPrediction(source,dataset,prediction){
    console.log('downloadPrediction');
    $.ajax({
        url: SITEURL + "/predictions/downloadPrediction",
        dataType: 'json',
        type: 'POST',
        data: {
            source : source,
            dataset : dataset,
            prediction : prediction,
        },
        success: function (result) {            
            if (result.status == "success" || result.status == "waiting") {
                statusPrediction(result.msg);
                    if(result.status == "success"){
                        //downloadPrediction(result.source,result.dataset,result.prediction);                         
                        console.log('finish prediction');
                        $('.counter').html(result.percent);
                        $('.txt-prediction').show();
                        createChartP(result.series);
                        $('#container').show();
                        $('.form-predictions-status').hide();
                        $('.counter').counterUp({delay:10,time:1e3});
                    }else{
                        setTimeout(function () {
                            downloadPrediction(result.source,result.dataset,result.prediction);
                        }, 10000);
                    }
            }else{
                progressBar('finish');
                toastr[result.status](result.msg);                
            }            
        }
    });
    
}

function createChartP(series) {
    console.log('chart');
    // Set up the chart
    var chart = new Highcharts.Chart({
        chart: {
            renderTo: 'container',
            margin: [100, 80, 150, 80],
            type: 'scatter3d',
            animation: false,
            options3d: {
                enabled: true,
                alpha: 10,
                beta: 30,
                depth: 250,
                viewDistance: 5,
                fitToPlot: false,
                frame: {
                    bottom: {size: 1, color: 'rgba(0,0,0,0.02)'},
                    back: {size: 1, color: 'rgba(0,0,0,0.04)'},
                    side: {size: 1, color: 'rgba(0,0,0,0.06)'}
                }
            }
        },
        title: {
            text: 'PROBABILIDADES'
        },
        tooltip: {
            useHTML: true,
            pointFormat: '<b>$ {point.x:,.0f}</b><br>' +
                    '{point.z:.1f} % <br>' +
                    '<span><i class="feather feather-clock"></i> {point.y}</span>'
        },
        subtitle: {
            text: ''
        },
        plotOptions: {
            scatter: {
                width: 10,
                height: 10,
                depth: 10
            }
        },
        yAxis: {
            title: {
                enabled: true,
                text: 'Dias mora'
            },
            startOnTick: true,
            endOnTick: true,
            showLastLabel: true
        },
        xAxis: {
            title: {
                enabled: true,
                text: 'Capital'
            },
            startOnTick: true,
            endOnTick: true,
            showLastLabel: true
        },
        zAxis: {
            labels: {
                skew3d: true
            },
            title: {
                enabled: true,
                text: 'Ratio Capital'
            },
            startOnTick: true,
            endOnTick: true,
            showLastLabel: true
        },
        legend: {
            layout: 'vertical',
            align: 'left',
            verticalAlign: 'bottom',
            floating: true,
            backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF',
            borderWidth: 1
        },
        series: series
    });

    // Add mouse and touch events for rotation
    (function (H) {
        function dragStart(eStart) {
            eStart = chart.pointer.normalize(eStart);

            var posX = eStart.chartX,
                    posY = eStart.chartY,
                    alpha = chart.options.chart.options3d.alpha,
                    beta = chart.options.chart.options3d.beta,
                    sensitivity = 5, // lower is more sensitive
                    handlers = [];

            function drag(e) {
                // Get e.chartX and e.chartY
                e = chart.pointer.normalize(e);

                chart.update({
                    chart: {
                        options3d: {
                            alpha: alpha + (e.chartY - posY) / sensitivity,
                            beta: beta + (posX - e.chartX) / sensitivity
                        }
                    }
                }, undefined, undefined, false);
            }

            function unbindAll() {
                handlers.forEach(function (unbind) {
                    if (unbind) {
                        unbind();
                    }
                });
                handlers.length = 0;
            }

            handlers.push(H.addEvent(document, 'mousemove', drag));
            handlers.push(H.addEvent(document, 'touchmove', drag));


            handlers.push(H.addEvent(document, 'mouseup', unbindAll));
            handlers.push(H.addEvent(document, 'touchend', unbindAll));
        }
        H.addEvent(chart.container, 'mousedown', dragStart);
        H.addEvent(chart.container, 'touchstart', dragStart);
    }(Highcharts));

    setTimeout(function () {
        $('#form-comparations-status').show();
        $('.highcharts-credits').fadeOut('slow');
    }, 500);

}

$(window).on('load', function() {
    setTimeout(function () {
        $('#m-wallets').trigger('click');
        $('#m-predictions').addClass('active');
    }, 250); 
});