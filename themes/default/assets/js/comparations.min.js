$(function () {

    var seriesName = '';
    var seriesData = [];
    
//    // Load the fonts
//Highcharts.createElement('link', {
//    href: 'https://fonts.googleapis.com/css?family=Signika:400,700',
//    rel: 'stylesheet',
//    type: 'text/css'
//}, null, document.getElementsByTagName('head')[0]);
//
//// Add the background image to the container
//Highcharts.addEvent(Highcharts.Chart, 'afterGetContainer', function () {
//    this.container.style.background =
//        'url(https://www.highcharts.com/samples/graphics/sand.png)';
//});
//
//
//Highcharts.theme = {
//    colors: ['#f45b5b', '#8085e9', '#8d4654', '#7798BF', '#aaeeee',
//        '#ff0066', '#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],
//    chart: {
//        backgroundColor: null,
//        style: {
//            fontFamily: 'Signika, serif'
//        }
//    },
//    title: {
//        style: {
//            color: 'black',
//            fontSize: '16px',
//            fontWeight: 'bold'
//        }
//    },
//    subtitle: {
//        style: {
//            color: 'black'
//        }
//    },
//    tooltip: {
//        borderWidth: 0
//    },
//    legend: {
//        itemStyle: {
//            fontWeight: 'bold',
//            fontSize: '13px'
//        }
//    },
//    xAxis: {
//        labels: {
//            style: {
//                color: '#6e6e70'
//            }
//        }
//    },
//    yAxis: {
//        labels: {
//            style: {
//                color: '#6e6e70'
//            }
//        }
//    },
//    plotOptions: {
//        series: {
//            shadow: true
//        },
//        candlestick: {
//            lineColor: '#404048'
//        },
//        map: {
//            shadow: false
//        }
//    },
//
//    // Highstock specific
//    navigator: {
//        xAxis: {
//            gridLineColor: '#D0D0D8'
//        }
//    },
//    rangeSelector: {
//        buttonTheme: {
//            fill: 'white',
//            stroke: '#C0C0C8',
//            'stroke-width': 1,
//            states: {
//                select: {
//                    fill: '#D0D0D8'
//                }
//            }
//        }
//    },
//    scrollbar: {
//        trackBorderColor: '#C0C0C8'
//    },
//
//    // General
//    background2: '#E0E0E8'
//
//};
//
//// Apply the theme
//Highcharts.setOptions(Highcharts.theme);
//    
//    
//    
    
            
    // Give the points a 3D feel by adding a radial gradient
    Highcharts.setOptions({
        global: {
            useUTC: false
        },
        lang: {
            thousandsSep: ','
        },
        colors: Highcharts.getOptions().colors.map(function (color) {
            return {
                radialGradient: {
                    cx: 0.4,
                    cy: 0.3,
                    r: 0.5
                },
                stops: [
                    [0, color],
                    [1, Highcharts.Color(color).brighten(-0.2).get('rgb')]
                ]
            };
        })
    });
    
    Highcharts.setOptions({
        
     });
     
    
    
    $('body').on('submit', '.form-comparations', function (e) { 
        e.preventDefault();
        createChart();
    });
    
function createChart() {
    
    var comparation = '';
    $('.portfolio-comparation').each(function(){
        var _this = $(this);
        comparation = (_this.val() != '')? comparation+_this.val()+',' : comparation;

    });
            
    var formElement = document.querySelector(".form-comparations");    
    var form = new FormData(formElement);
    form.append('comparations', comparation);     

    $.ajax({
        url: SITEURL + "/predictions/chartComparations",
        async: false,
        dataType: 'json',
        type: 'POST',
        data: form,
        processData: false,
        contentType: false,
        success: function (result) {

            if (result.status == "success") {                    
                seriesName = result.name;
                seriesData = result.series;
            }else{
                toastr[result.status](result.msg);
            }
        }
    });

    // Set up the chart
    var chart = new Highcharts.Chart({
        chart: {
            renderTo: 'container',
            margin: [100,80,150,80],
            type: 'scatter3d',
            animation: false,
            options3d: {
                enabled: true,
                alpha: 10,
                beta: 30,
                depth: 250,
                viewDistance: 5,
                fitToPlot: false,
                frame: {
                    bottom: {size: 1, color: 'rgba(0,0,0,0.02)'},
                    back: {size: 1, color: 'rgba(0,0,0,0.04)'},
                    side: {size: 1, color: 'rgba(0,0,0,0.06)'}
                }
            }
        },
        title: {
            text: seriesName
        },
            tooltip: {
                useHTML: true,
                pointFormat: '<b>$ {point.x:,.0f}</b><br>' +
                        '{point.z:.1f} % <br>' +
                        '<span><i class="feather feather-clock"></i> {point.y}</span>'
            },
        subtitle: {
            text: ''
        },
        plotOptions: {
            scatter: {
                width: 10,
                height: 10,
                depth: 10
            }
        },
        yAxis: {
            title: {
                enabled: true,
                text: 'Dias mora'
            },
            startOnTick: true,
            endOnTick: true,
            showLastLabel: true
        },
        xAxis: {
            title: {
                enabled: true,
                text: 'Capital'
            },
            startOnTick: true,
            endOnTick: true,
            showLastLabel: true
        },
        zAxis: {
            labels: {
                skew3d: true
            },
            title: {
                enabled: true,
                text: 'Ratio Capital'
            },
            startOnTick: true,
            endOnTick: true,
            showLastLabel: true
        },
        legend: {
            layout: 'vertical',
            align: 'left',
            verticalAlign: 'bottom',           
            floating: true,
            backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF',
            borderWidth: 1
        },
        series: seriesData
    });

    // Add mouse and touch events for rotation
    (function (H) {
        function dragStart(eStart) {
            eStart = chart.pointer.normalize(eStart);

            var posX = eStart.chartX,
                    posY = eStart.chartY,
                    alpha = chart.options.chart.options3d.alpha,
                    beta = chart.options.chart.options3d.beta,
                    sensitivity = 5, // lower is more sensitive
                    handlers = [];

            function drag(e) {
                // Get e.chartX and e.chartY
                e = chart.pointer.normalize(e);

                chart.update({
                    chart: {
                        options3d: {
                            alpha: alpha + (e.chartY - posY) / sensitivity,
                            beta: beta + (posX - e.chartX) / sensitivity
                        }
                    }
                }, undefined, undefined, false);
            }

            function unbindAll() {
                handlers.forEach(function (unbind) {
                    if (unbind) {
                        unbind();
                    }
                });
                handlers.length = 0;
            }

            handlers.push(H.addEvent(document, 'mousemove', drag));
            handlers.push(H.addEvent(document, 'touchmove', drag));


            handlers.push(H.addEvent(document, 'mouseup', unbindAll));
            handlers.push(H.addEvent(document, 'touchend', unbindAll));
        }
        H.addEvent(chart.container, 'mousedown', dragStart);
        H.addEvent(chart.container, 'touchstart', dragStart);
    }(Highcharts));
    
    
    setTimeout(function(){
        $('#form-comparations-status').show();
        $('.highcharts-credits').fadeOut('slow');
    },500);
    
}

    

});

$(window).on('load', function() {
    setTimeout(function () {
        $('#m-wallets').trigger('click');
        $('#m-comparations').addClass('active');
    }, 350);
});
